security:

    encoders:
        #Symfony\Component\Security\Core\User\User: plaintext
        #Symfony\Component\Security\Core\User\User:
        #    algorithm: sha512
        #    encode_as_base64: false
        #    iterations: 1

        Troiswa\BackBundle\Entity\User: plaintext
            #algorithm: bcrypt
            #cost: 15

    #role_hierarchy:
    #    ROLE_SUPER_ADMIN: [ROLE_ADMIN]
    #    ROLE_ADMIN: [ROLE_USER, ROLE_ALLOWED_TO_SWITCH]

    providers:
        in_memory:
           memory:
              users: # Utilisateur en mémoire
                admin: # Utilisateur admin
                  password: admin # Mot de passe de admin
                  roles: ROLE_ADMIN
                toto: { password: bidule, roles: ROLE_USER }
                #toto: { password: 582fc805980c8508c75c6b162671552d6a468293d4070c03f82b849169c5e88ab1949558f938b98f212f5c53cfbf6a8c5d2401c69e63b9cfb0a6dcc92aae3ec7, roles: ROLE_USER }
        provider_back:
            entity : { class: TroiswaBackBundle:User, property: username }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt|error)|css|images|js)/
            security: false

        administration:
            # toutes les routes commençant par admin
            pattern: ^/admin
            anonymous: true
            # Ouvre la boite de dialogue basic pour se connecter
            #http_basic:
                #realm: "Attention, zone sécurisée"
                #provider: in_memory
                #provider: provider_back

            form_login:
                check_path: troiswa_back_login_check
                login_path: troiswa_back_login

            provider: provider_back

            # Pour permettre de switcher un utilisateur
            switch_user: { role: ROLE_ADMIN, parameter: _want_to_be_this_user }

    #access_control:
        # seul l'administrateur à accès aux pages produit
        #- { path: ^/admin/product/, role: ROLE_ADMIN }
        #- { path: ^/admin, role: IS_AUTHENTICATED_ANONYMOUSLY }